openapi: 3.0.0
info:
  title: User API 
  version: 1.0.0
tags:
  - name: User
    description: Operations related to users
  - name: Roles
    description: Operations related to roles
  - name: Permissions
    description: Operations related to permissions
paths:
  /register:
    post:
      summary: Register a new user
      tags: [User Authentication Api]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        "409":
          description: User with this email already exists
  /login:
    post:
      summary: Login with email and password
      tags: [User Authentication Api]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                    example: 200
                  success:
                    type: boolean
                  message:
                    type: string
                  role:
                    type: string
                  permissions:
                    type: array
                    items:
                      type: string
                  token:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
        "401":
          description: Authentication failed
  /logout:
    post:
      summary: Logout user
      tags: [User Authentication Api]
      responses:
        "200":
          description: User logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /roles:
    post:
      summary: Create a new role
      tags: [Roles]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: Role created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newRole:
                    type: object
                    properties:
                      name:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                  msg:
                    type: string
    get:
      summary: Get all roles
      tags: [Roles]
      responses:
        "200":
          description: Roles fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        permissions:
                          type: array
                          items:
                            type: string
                  msg:
                    type: string
  "/roles/{id}":
    get:
      summary: Get role by ID
      tags: [Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Role fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: object
                    properties:
                      name:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                  msg:
                    type: string
    put:
      summary: Update role by ID
      tags: [Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Role updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: object
                    properties:
                      name:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                  msg:
                    type: string
    delete:
      summary: Delete role by ID
      tags: [Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Role deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /permissions:
    post:
      summary: Create a new permission
      tags: [Permissions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "201":
          description: Permission created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: object
                    properties:
                      name:
                        type: string
                  msg:
                    type: string
    get:
      summary: Get all permissions
      tags: [Permissions]
      responses:
        "200":
          description: Permissions fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                  msg:
                    type: string
  "/permissions/{id}":
    put:
      summary: Update permission by ID
      tags: [Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Permission updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  newData:
                    type: object
                    properties:
                      name:
                        type: string
                  msg:
                    type: string
    delete:
      summary: Delete permission by ID
      tags: [Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Permission deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
